AWSTemplateFormatVersion: '2010-09-09'
Description: 'Logger for consul components'
Parameters:
  Env:
    Type: String
  VPC:
    Type: AWS::EC2::VPC::Id
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
  AMI:
    Type: 'AWS::EC2::Image::Id'
  InstanceType:
    Type: String
    Default: t3a.nano
  ServiceName:
    Type: String
  TargetGroup:
    Type: String
  VPCCIDR:
    Type: String
Resources:
  LoggerConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Ref AMI
      IamInstanceProfile: !Ref LoggerProfile
      SecurityGroups:
        - !Ref LoggerSecurityGroup
      InstanceType: !Ref InstanceType
      BlockDeviceMappings:
        - DeviceName: "/dev/sda1"
          Ebs:
            VolumeSize: 1
            VolumeType: gp3
            DeleteOnTermination: "true"
  ASLogger:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: !Ref SubnetIds
      LaunchConfigurationName: !Ref 'LoggerConfig'
      TargetGroupARNs:
        - !Ref TargetGroup
      TerminationPolicies:
        - OldestInstance
      DesiredCapacity: '1'
      MinSize: '0'
      MaxSize: '1'
      Tags:
        - Key: Name
          Value: !Sub '${ServiceName}-Service-Logger'
          PropagateAtLaunch: 'true'
        - Key: consulcloud
          Value: service
          PropagateAtLaunch: 'true'
        - Key: consulservicename
          Value: !Sub '${ServiceName}-logger'
          PropagateAtLaunch: 'true'
        - Key: consulserviceport
          Value: 514
          PropagateAtLaunch: 'true'
        - Key: loggroup
          Value: !Ref LogGroup
          PropagateAtLaunch: 'true'

  LoggerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub '${ServiceName} logger ingress'
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 514
        ToPort: 514
        CidrIp: !Ref VPCCIDR
      - IpProtocol: udp
        FromPort: 514
        ToPort: 514
        CidrIp: !Ref VPCCIDR
      SecurityGroupEgress:
      - IpProtocol: -1
        CidrIp: 0.0.0.0/0


  LoggerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ConsulDescribeInstances
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ec2:DescribeInstances
                Resource: '*'
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !GetAtt LogGroup.Arn
  LoggerProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref LoggerRole

  LogGroup: 
    Type: AWS::Logs::LogGroup
    Properties: 
      RetentionInDays: 1

